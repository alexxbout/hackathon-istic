version: '3.8'

services:
    postgres:
        image: postgres:16-alpine
        container_name: postgres-db
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=skillstasks
        ports:
            - "5432:5432"
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "postgres"]
            interval: 5s
            retries: 5
            start_period: 10s

    app:
        build:
            context: ./back/app
            dockerfile: Dockerfile
        container_name: backend-service
        networks:
            - app-network
        environment:
            - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/skillstasks
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=postgres
            - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
            - SPRING_LIQUIBASE_CHANGE_LOG=classpath:db/changelog/db.changelog-master.yaml
            - SPRING_LIQUIBASE_DRIVER_CLASS_NAME=org.postgresql.Driver
            - SPRING_LIQUIBASE_URL=jdbc:postgresql://postgres:5432/skillstasks
            - SPRING_LIQUIBASE_USER=postgres
            - SPRING_LIQUIBASE_PASSWORD=postgres
            - LDAP_USER_SERVICE_BASE_URL=http://backend-auth:8081/api/users
        ports:
            - "8080:8080"
        depends_on:
            postgres:
                condition: service_healthy

    auth:
        build:
            context: ./back/auth
            dockerfile: Dockerfile
        container_name: backend-auth
        networks:
            - app-network
        environment:
            - SPRING_APPLICATION_NAME=auth
            - SERVER_PORT=8081
            - SPRING_LDAP_URLS=ldap://openldap:1389
            - SPRING_LDAP_BASE=dc=istic,dc=fr
            - SPRING_LDAP_USERNAME=cn=admin,dc=istic,dc=fr
            - SPRING_LDAP_PASSWORD=adminpassword
        ports:
            - "8081:8081"
        depends_on:
            postgres:
                condition: service_healthy
            openldap:
                condition: service_healthy

    openldap:
        image: hackathon2025/openldap_with_data
        container_name: openldap
        ports:
            - "1389:1389"
            - "1636:1636"
        networks:
            - app-network
        healthcheck:
            test: ["CMD", "ldapsearch", "-H", "ldap://localhost:1389", "-D", "cn=admin,dc=istic,dc=fr", "-w", "adminpassword", "-b", "dc=istic,dc=fr"]
            interval: 10s
            retries: 5

    front:
        build:
            context: ./front/hackathon_groupe_3
            dockerfile: Dockerfile.dev
        container_name: frontend-service
        networks:
            - app-network
        ports:
            - "3000:3000"
        volumes:
            - ./front/hackathon_groupe_3:/app
            - /app/node_modules

    init-db:
        image: postgres:16-alpine
        container_name: db-initializer
        networks:
            - app-network
        depends_on:
            app:
                condition: service_started
        volumes:
            - ./back/data:/docker-entrypoint-initdb.d
        command: >
            sh -c "
            echo 'Waiting for backend to be ready...';
            sleep 15;
            echo 'Inserting initial data...';
            PGPASSWORD=postgres psql -h postgres -U postgres -d skillstasks -f /docker-entrypoint-initdb.d/main.sql;
            echo 'Data successfully inserted.'"

networks:
    app-network:
        driver: bridge